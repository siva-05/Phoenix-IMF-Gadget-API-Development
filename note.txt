JWT Token:
JSON Web Tokens (JWT) provide a secure way to authenticate users and ensure safe communication between clients and servers

How it works:
- User Logs In: The client (browser) sends login credentials to the server.
- Server Generates JWT: If credentials are valid, the server creates a JWT containing user data and signs it with a secret key.
- Token Sent to Client: The JWT is sent back to the client and stored (usually in localStorage or a cookie).
- Client Sends Token in Requests: For protected routes, the client includes the JWT in the Authorization header (Bearer Token).
- Server Verifies and Responds: The server verifies the token, extracts user info, and processes the request if valid.



A JWT consists of three parts, separated by dots (.)
Header. Payload. Signature

Steps:
1. Header
The header contains metadata 
{
    "alg": "HS256",
    "typ": "JWT"
}
For example:
Base64Url Encoded Header
abc123

2. Payload
The payload contains the information about the user 
{
    "userId": 123,
    "role": "admin",
    "exp": 1672531199
}
Base64Url Encoded Payload
def456

3.Signature
Generated using the header, payload, and a secret key
HMACSHA256(
    base64UrlEncode(header) + "." + base64UrlEncode(payload),
    secret
)
ghi789

4. Final JWT token
final JWT token is generated by joining the Header, Payload and Signature via a dot
abc123.def456.ghi789
